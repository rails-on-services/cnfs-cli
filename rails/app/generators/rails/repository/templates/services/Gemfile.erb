# frozen_string_literal: true
# services/Gemfile<%= @extension %>
# NOTE: The location of the gems on a path vs loaded from rubygems or other gem server
# is coordinated with the Dockerfile

source ENV['GEM_SERVER'] || 'https://rubygems.org'
git_source(:github) { |repo| "https://github.com/#{repo}.git" }

ruby '<%= repository.ruby_version %>'

env = ENV['GEM_ENV'] || ''
env = ".#{env}" unless env.empty?

# Sourced from <repo_root>/services/<service_root>/Gemfile so path names are relative to that directory
# Gemfiles sourced:
# services/service/Gemfile
# services/Gemfile
# services/service/Gemfile.upstream
# services/Gemfile[env].upstream
# services/Gemfile[env].local

["Gemfile#{env}.upstream", "../Gemfile#{env}.upstream", "../Gemfile#{env}.local"].each do |gemfile|
  instance_eval(File.read(gemfile)) if File.exist?(gemfile)
end

gem 'awesome_print'
gem 'bootsnap', '>= 1.4.2', require: false
gem 'data_migrate'
gem 'json-schema'
gem 'nokogiri', '1.12.2'
gem 'paranoia', '~> 2.2'
gem 'pg', '>= 0.18', '< 2.0'
gem 'pry-rails'
# Use Rack CORS for handling Cross-Origin Resource Sharing (CORS), making cross-origin AJAX possible
# gem 'rack-cors'
gem 'rails', '~> 6.1.4'
gem 'rufus-scheduler', '~> 3.6.0'


group :development do
  gem 'listen', '>= 3.0.5', '< 3.2'
  gem 'rails-erd'
  gem 'spring'
  gem 'spring-watcher-listen', '~> 2.0.0'
end

group :development, :test do
  gem 'airborne'
  gem 'brakeman', require: false
  # gem 'byebug', platforms: [:mri, :mingw, :x64_mingw]
  gem 'dotenv'
  gem 'factory_bot_rails'
  gem 'faker'
  gem 'jsonapi-resources-matchers'
  # gem 'pry-stack_explorer'
  gem 'pundit-matchers'
  gem 'rspec-rails'
  gem 'perx-rubocop'
  gem 'shoulda-matchers'
  gem 'spring-commands-rspec'
  gem 'rspec_junit_formatter'
end

group :production do
  gem 'puma'
end

# Windows does not include zoneinfo files, so bundle the tzinfo-data gem
# gem 'tzinfo-data', platforms: [:mingw, :mswin, :x64_mingw, :jruby]
