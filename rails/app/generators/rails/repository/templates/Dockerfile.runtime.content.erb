ARG source_path=<%= cnfs.repo_name %>
ARG target_path=<%= cnfs.repo_path %>

# TODO: Replace rails:rails with ${PUID}:${PGID} when CircleCI is at 19.03
COPY --chown=rails:rails ${source_path}/lib/core/. ${target_path}/lib/core/
COPY --chown=rails:rails ${source_path}/lib/sdk/. ${target_path}/lib/sdk/
COPY --chown=rails:rails ${source_path}/services/Gemfile ../Gemfile
COPY --chown=rails:rails ${source_path}/.rubocop.yml ${target_path}/.rubocop.yml
COPY --chown=rails:rails ${source_path}/.rubocop_todo.yml ${target_path}/.rubocop_todo.yml

# workaround for buildkit not setting correct permissions
RUN sed -i '/git/d' ${target_path}/lib/sdk/*.gemspec \
 && chown rails: /home/rails/lib

EXPOSE 3000

# Boot the application; Override this from the command line in order to run other tools
# CMD ["bundle", "exec", "puma", "config.ru"]
CMD ["bundle", "exec", "rails", "server", "-b", "0.0.0.0", "-P", "/tmp/server.pid"]

# CircleCI docker version is old, it doesn't expand ARGs or ENVs for "COPY --chown" directive
# TODO: Replace rails:rails with ${PUID}:${PGID} when CircleCI is at 19.03
COPY --chown=rails:rails --from=base /usr/local/bundle /usr/local/bundle

# Copy in the project files
ARG project=user
COPY --chown=rails:rails ${source_path}/services/${project}/. ./

ARG rails_env=production
ENV GEM_HOME=/usr/local/bundle/ruby/2.7.0
ENV PATH $GEM_HOME/bin:$PATH
ENV RAILS_ENV=${rails_env} EDITOR=vim TERM=xterm RAILS_LOG_TO_STDOUT=yes
