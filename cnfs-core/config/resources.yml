# resources.yml
---
DEFAULTS: &DEFAULTS
  name: $LABEL

app_bucket: &app_bucket
  name: app
  layer: storage
  type: Resource::Bucket
  config:
    services: ['documents', 'reports', 'sftp']

cdn_bucket:
  <<: *app_bucket
  name: cdn
  config:
    services: ['images']

image_cdn:
  # <<: *DEFAULTS 
  # layer: cdns
  name: cdn
  layer: storage
  type: Resource::Cdn
  config:
    bucket: cdn
    hostname: cdn

api_endpoint: &api_endpoint
  <<: *DEFAULTS 
  layer: dns
  type: Resource::Endpoint
  config:
    hostname: api
    scheme: https

grafana_endpoint:
  <<: *api_endpoint
  config:
    hostname: grafana
    scheme: https

sftp_endpoint:
  <<: *api_endpoint
  config:
    hostname: sftp

globalaccelerator:
  <<: *DEFAULTS 
  layer: networking
  config:
    hostname: "*.staging.whistler.perxtech.io"

kubernetes:
  <<: *DEFAULTS 
  layer: cluster
  config:
    name: whistler-staging
    tags:
      environment: staging
    services:
      grafana:
        configuration_overrides:
          grafana.ini:
            server:
              root_url: 'https://grafana.staging.whistler.perxtech.io'
      istio:
        configuration_overrides:
          gateways:
            istio-ingressgateway:
              serviceAnnotations:
                external-dns.alpha.kubernetes.io/hostname: ingressgateway.staging.whistler.perxtech.io

postgres:
  <<: *DEFAULTS 
  layer: cluster_database
  config:
    clusters:
      default:
        # TODO: name comes from DNS unless set here
        name: whistler-staging-main
        instance_type: db.r5.large
        replica_count: 1

redis:
  <<: *DEFAULTS 
  layer: cluster_database
  type: Resource::Redis
  config:
    clusters:
      default:
        # TODO: name comes from DNS unless set here
        name: whistler-staging
        node_type: cache.r5.large
        number_cache_clusters: 1
  environment:
    application:
      redis_url: redis://redis-master:6379

vpc:
  <<: *DEFAULTS 
  layer: networking
  environment:
    self:
      cidr: 10.6.0.0/16
      create_database_subnets: true
      create_elasticache_subnets: true

<%= Cnfs::Core.project_fixture_content(__FILE__) %>
