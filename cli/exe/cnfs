#!/usr/bin/env ruby
# frozen_string_literal: true

lib_path = File.expand_path('../lib', __dir__)
$LOAD_PATH.unshift(lib_path) unless $LOAD_PATH.include?(lib_path)

ENV['CNFS_CLI_DEV'] = '1' if ARGV.delete('--cli-dev')
ENV['CNFS_DEV'] = '1' if ARGV.delete('--dev')

require 'cnfs'

if ARGV[0].blank? || %w[version help new init].include?(ARGV[0])
  Cnfs.lite_setup
else
  Cnfs.setup
  if Cnfs.application
    Cnfs.application.initialize!
  else
    STDOUT.puts('WARN: not a cnfs project')
    return
  end
end

Signal.trap('INT') do
  warn("\n#{caller.join("\n")}: interrupted")
  exit(1)
end

begin
  PrimaryController.start
rescue Cnfs::Error => e
  puts "ERROR: #{e.message}"
  exit 1
end
