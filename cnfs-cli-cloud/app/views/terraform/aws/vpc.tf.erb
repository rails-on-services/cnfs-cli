# VPC
<%-
@module_name = :vpc
def defaults
  basic = {
    source: 'terraform-aws-modules/vpc/aws',
    version: '~> 2.18.0'
  }
  k8s = {
    enable_nat_gateway: true,
    enable_dns_hostnames: true,
    enable_dns_support: true,
    one_nat_gateway_per_az: true,
    enable_s3_endpoint: true,
    create_redshift_subnet_group: false
  }
  deploy_type.eql?(:kubernetes) ? k8s.merge(basic) : basic
end
@config = resource_config(target, resource, defaults)
@cluster_name = @config.config['name'].cnfs_sub(target)
-%>
module "<%= title %>" {
<%= @config.render.join("\n") %>

<% if deploy_type.eql?(:kubernetes) %>
  azs                             = slice(data.aws_availability_zones.available.names, 0, 3)
  public_subnets                  = [for i in range(0, 3) : cidrsubnet("<%= @config.config['cidr'] %>", 4, i)]
  private_subnets                 = [for i in range(3, 6) : cidrsubnet("<%= @config.config['cidr'] %>", 4, i)]
  database_subnets                = <%= @config.config['create_database_subnet_group'] ? "[for i in range(6, 9) : cidrsubnet(\"#{@config.config['cidr']}\", 4, i)]" : [] %>
  elasticache_subnets             = <%= @config.config['create_elasticache_subnet_group'] ? "[for i in range(9, 12) : cidrsubnet(\"#{@config.config['cidr']}\", 4, i)]" : [] %>

  vpc_tags                        = { "kubernetes.io/cluster/<%= @cluster_name %>" = "shared" }

  public_subnet_tags  = {
    "kubernetes.io/cluster/<%= @cluster_name %>" = "shared"
    "kubernetes.io/role/elb"                      = "1"
  }

  private_subnet_tags = {
    "kubernetes.io/cluster/<%= @cluster_name %>" = "shared"
    "kubernetes.io/role/internal-elb"             = "1"
  }
<% end %>
}

output "<%= title %>" {
  value = module.vpc.<%= output_type %>
}
